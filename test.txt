#This script uses the SentimentIntensityAnalyzer from the nltk library to analyze sentiment. 
#The sentiment of a given text is calculated using the polarity_scores method, which returns a dictionary of scores for positive, negative, and neutral sentiment. 
#In the analyze_sentiment function, we use these scores to classify the text as positive, negative, or neutral. 
#Finally, the sentiment of an example text is analyzed and printed to the console.

# Import necessary libraries
import nltk
nltk.download('vader_lexicon')
from nltk.sentiment import SentimentIntensityAnalyzer

# Initialize sentiment analyzer
sia = SentimentIntensityAnalyzer()

# Define a function to analyze sentiment
def analyze_sentiment(text):
    sentiment = sia.polarity_scores(text)
    if sentiment['compound'] > 0:
        return "Positive"
    elif sentiment['compound'] < 0:
        return "Negative"
    else:
        return "Neutral"

# Example text to analyze
text = "I love this product. It's amazing."

# Analyze sentiment
sentiment = analyze_sentiment(text)
print("Sentiment: ", sentiment)



